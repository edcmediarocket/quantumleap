
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Daily Signals: Publicly readable, only backend can write.
    match /dailySignals/{signalId} {
      allow read: if true;
      allow write: if false; // Prevent client-side writes
    }

    // User Preferences: Users can read/write their own preferences.
    match /users/{userId}/preferences/{prefDoc} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Admin Settings: Only authenticated admins (or backend) should manage.
    // This rule is a placeholder; actual admin UID check might be more complex or handled by backend.
    // For simplicity, allowing any authenticated user to read. Writes should be backend-only or admin-only.
    match /adminSettings/{settingId} {
      allow read: if request.auth != null;
      allow write: if false; // Strongly recommend backend/admin only for writes
    }

    // Coach Logs: Users can potentially create their own logs.
    // Reading logs might be restricted to users for their own logs, or admins.
    match /coachLogs/{logId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      // Example: Allow users to read their own logs
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      // Example: Deny updates/deletes from client
      allow update, delete: if false;
    }

    // Add rules for other collections as needed.
    // Example: Allow read for any other collection if user is authenticated.
    // match /{document=**} {
    //   allow read: if request.auth != null;
    //   allow write: if false; // Default to no client writes for other paths
    // }
  }
}
