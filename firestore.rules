
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Daily Signals: Publicly readable, only backend (functions) can write
    match /dailySignals/{signalId} {
      allow read: if true;
      allow write: if false; // Deny client-side writes
    }

    // User Preferences: Only authenticated users can read/write their own preferences
    match /users/{userId}/preferences/{prefId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // User-specific data (general, if you store more under /users/{userId})
    match /users/{userId}/{document=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Admin Settings: Publicly readable for feature toggles, only specific admin UID can write
    match /adminSettings/{settingId} {
      allow read: if true; // Feature toggles can be public
      allow write: if request.auth != null && request.auth.uid == 'qRJOtYXWqLbpQ1yx6qRdwSGwGyl1'; // Replace with your actual admin UID
    }

    // Coach Logs: Only authenticated users can write their own logs. 
    // Read access might be restricted further (e.g., only admin or only user reads own)
    // For now, allow authenticated users to write. Consider read rules carefully.
    match /coachLogs/{logId} {
      allow create: if request.auth != null; // Any authenticated user can create a log entry
      allow read, update, delete: if request.auth != null && request.auth.uid == 'qRJOtYXWqLbpQ1yx6qRdwSGwGyl1'; // Example: Only admin can manage/read all logs
      // Or, if users should read their own logs:
      // allow read: if request.auth != null && (request.auth.uid == resource.data.userId || request.auth.uid == 'YOUR_ADMIN_UID_HERE');
    }

    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
